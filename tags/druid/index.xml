<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Druid on bheisler.github.io</title>
    <link>https://bheisler.github.io/tags/druid/</link>
    <description>Recent content in Druid on bheisler.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Nov 2020 11:30:00 -0600</lastBuildDate>
    
	<atom:link href="https://bheisler.github.io/tags/druid/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a Recipe Manager - Part 5 - Data Integrity</title>
      <link>https://bheisler.github.io/post/recipe-manager-part-5-data-integrity/</link>
      <pubDate>Sun, 22 Nov 2020 11:30:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/recipe-manager-part-5-data-integrity/</guid>
      <description>Welcome back to my series of posts on the recipe-management software I&amp;rsquo;m building. If you haven&amp;rsquo;t been following along, you&amp;rsquo;ll probably want to start at the first post. This isn&amp;rsquo;t so much a tutorial series like my posts on raytracing, just me writing about whatever&amp;rsquo;s on my mind as I build out my vision of what a recipe manager should be.
Progress In the last post I finished building the ingredient editor, meaning that I could move on to the recipe editor - probably the most important view in the whole application.</description>
    </item>
    
    <item>
      <title>Building a Recipe Manager - Part 4 - Async-std and Even More Druid</title>
      <link>https://bheisler.github.io/post/recipe-manager-part-4-async-std-and-even-more-druid/</link>
      <pubDate>Sun, 08 Nov 2020 15:00:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/recipe-manager-part-4-async-std-and-even-more-druid/</guid>
      <description>Welcome back to my series of posts on the recipe-management software I&amp;rsquo;m building. If you haven&amp;rsquo;t been following along, you&amp;rsquo;ll probably want to start at the first post. This isn&amp;rsquo;t so much a tutorial series like my posts on raytracing, just me writing about whatever&amp;rsquo;s on my mind as I build out my vision of what a recipe manager should be.
Progress In the last post I finished building the ingredient editor itself (at least for now).</description>
    </item>
    
    <item>
      <title>Building a Recipe Manager - Part 3 - Parsing and more Druid</title>
      <link>https://bheisler.github.io/post/recipe-manager-part-3-parsing-and-more-druid/</link>
      <pubDate>Sun, 25 Oct 2020 15:30:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/recipe-manager-part-3-parsing-and-more-druid/</guid>
      <description>Hello! This post will likely be a bit shorter than the last. Today&amp;rsquo;s topic is a few thoughts about how complex it can be to parse human input, and how that interacts with Druid&amp;rsquo;s data model.
Progress I think I&amp;rsquo;m nearly finished tweaking the ingredient editor. I&amp;rsquo;ve spent the better part of a month on just this one view and that might seem like overkill, but for software like this the user experience is the whole point so it&amp;rsquo;s important to get it right.</description>
    </item>
    
    <item>
      <title>Building a Recipe Manager - Part 2 - Druid Experience Report</title>
      <link>https://bheisler.github.io/post/recipe-manager-part-2-druid-experience-report/</link>
      <pubDate>Sun, 18 Oct 2020 15:00:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/recipe-manager-part-2-druid-experience-report/</guid>
      <description>It&amp;rsquo;s been a couple of weeks since the last post, and as promised I&amp;rsquo;m back with some progress on the ingredient editor. The last post talked about my goals for this project, technical design decisions based on those goals, and my philosophy on starting challenging projects. This post is more of an experience report from my first few weeks of working with Druid.
Before we dig into Druid though, the progress in the last two weeks.</description>
    </item>
    
  </channel>
</rss>