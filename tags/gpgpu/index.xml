<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gpgpu on bheisler.github.io</title>
    <link>https://bheisler.github.io/tags/gpgpu/</link>
    <description>Recent content in Gpgpu on bheisler.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Aug 2018 20:00:00 -0600</lastBuildDate>
    
	<atom:link href="https://bheisler.github.io/tags/gpgpu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The State of GPGPU in Rust</title>
      <link>https://bheisler.github.io/post/state-of-gpgpu-in-rust/</link>
      <pubDate>Wed, 08 Aug 2018 20:00:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/state-of-gpgpu-in-rust/</guid>
      <description>At work a few months ago, we started experimenting with GPU-acceleration. My boss asked if I was interested. I didn&amp;rsquo;t know anything about programming GPUs, so of course I said &amp;ldquo;Heck yes, I&amp;rsquo;m interested!&amp;ldquo;. I needed to learn about GPUs in a hurry, and that led to my GPU Path Tracer series. That was a lot of fun, but it showed me that CUDA support in Rust is pretty poor.</description>
    </item>
    
    <item>
      <title>Writing a GPU-Accelerated Path Tracer in Rust - Part 3</title>
      <link>https://bheisler.github.io/post/writing-gpu-accelerated-path-tracer-part-3/</link>
      <pubDate>Thu, 19 Jul 2018 18:30:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/writing-gpu-accelerated-path-tracer-part-3/</guid>
      <description>Hello! Welcome to my third and final post on my GPU-accelerated Path Tracer in Rust. In the last post, we implemented all of the logic necessary to build a true path tracer. Problem is, even on the GPU it&amp;rsquo;s terrifically slow. This post is (mostly) about fixing that.
But first, we need to fix a bug or two, because I goofed. *sad trombone*
Step -1: Fixing Bugs /u/anderslanglands on Reddit pointed out that, since I&amp;rsquo;m using Cosine-weighted Importance Sampling, I need to do some extra math to avoid biasing the results.</description>
    </item>
    
    <item>
      <title>Writing a GPU-Accelerated Path Tracer in Rust - Part 2</title>
      <link>https://bheisler.github.io/post/writing-gpu-accelerated-path-tracer-part-2/</link>
      <pubDate>Thu, 12 Jul 2018 19:00:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/writing-gpu-accelerated-path-tracer-part-2/</guid>
      <description>Hello, and welcome to part two of my series on writing a GPU-accelerated path tracer in Rust. I&amp;rsquo;d meant to have this post up sooner, but nothing ruins my productivity quite like Games Done Quick. I&amp;rsquo;m back now, though, so it&amp;rsquo;s time to turn the GPU ray-tracer from the last post into a real path tracer.
Tracing Paths As mentioned last time, Path Tracing is an extension to Ray Tracing which attempts to simulate global illumination.</description>
    </item>
    
    <item>
      <title>Writing a GPU-Accelerated Path Tracer in Rust - Part 1</title>
      <link>https://bheisler.github.io/post/writing-gpu-accelerated-path-tracer-part-1/</link>
      <pubDate>Thu, 21 Jun 2018 19:00:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/writing-gpu-accelerated-path-tracer-part-1/</guid>
      <description>Well, it&amp;rsquo;s that time again. This is the start of a second series of articles on raytracing in Rust following on from my previous series. This time, I&amp;rsquo;ll be doing all of the rendering on a GPU using Accel - see my previous post on Accel. I thought this would be a good project for learning about GPU programming, see.
Second, this time I want to write a path tracer, rather than a raytracer.</description>
    </item>
    
    <item>
      <title>Running Rust on the GPU with Accel</title>
      <link>https://bheisler.github.io/post/rust-on-the-gpu-with-accel/</link>
      <pubDate>Thu, 14 Jun 2018 19:00:00 -0600</pubDate>
      
      <guid>https://bheisler.github.io/post/rust-on-the-gpu-with-accel/</guid>
      <description>NOTE: Much of what I discuss below is no longer accurate.
For the past month or so, I&amp;rsquo;ve been working on a follow-up to my series on Writing a Raytracer in Rust. This time around, I&amp;rsquo;ll be talking about writing a GPU-accelerated Path Tracer. As always, I&amp;rsquo;m writing it in Rust - including the GPU kernel code. Compiling Rust for GPUs at this point is difficult and error-prone, so I thought it would be good to start with some documentation on that aspect of the problem before diving into path tracing.</description>
    </item>
    
  </channel>
</rss>